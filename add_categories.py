import os
import django

# Установите переменную окружения для настроек Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'urban_alert.settings')

# Инициализируем Django
django.setup()

from requests.models import Category, MessageTemplate

# Ваши категории и сообщения
categories = [
    "Другие вопросы",
    "Ремонт детских элементов",
    "Валка сухих/аварийных деревьев",
    "Санитарная обрезка",
    "Уборка улиц (сан. очистка)",
    "Освещение не работает",
    "Ремонт и содержание автополива",
    "Вывоз веток",
    "Вывоз валки",
    "Уборка дворов (сан. очистка)",
    "Вывоз ТБО (либо уборка после)",
    "Консультация по компетенции",
    "Отключение электричества",
    "Открытый люк на дороге"
]

messages = {
    "Другие вопросы": [
        "У меня есть вопрос по благоустройству района.",
        "Нужен ответ на важный вопрос по поводу инфраструктуры.",
        "Какие изменения планируются в нашем районе?",
    ],
    "Ремонт и содержание автополива": [
        "Не работает система автополива на улице.",
        "Требуется ремонт системы автополива в парке.",
        "Автополив не функционирует, просьба починить.",
    ],
        "Ремонт детских элементов": [
        "Детские качели сломаны, нужно починить.",
        "Во дворе сломался игровой элемент, просьба отремонтировать.",
        "Когда починят детские горки?",
    ],
        "Санитарная обрезка": [
        "Требуется обрезка деревьев возле дома.",
        "Деревья нужно обрезать, они закрывают свет.",
        "Необходима санитарная обрезка старых деревьев.",
    ],
    "Вывоз валки": [
        "Произведите вывоз валки деревьев.",
        "После валки деревьев остались стволы, нужно вывезти.",
        "Валка произведена, но стволы до сих пор лежат.",
    ],
    "Уборка улиц (сан. очистка)": [
        "Улицы не убираются, грязь на тротуарах.",
        "Когда будет произведена уборка улиц?",
        "Много мусора на улице, требуется санитарная очистка.",
    ],
    "Вывоз веток": [
        "Когда произведут вывоз веток после обрезки деревьев?",
        "Ветки после обрезки деревьев лежат на земле, нужно вывезти.",
        "Во дворе скопились ветки, просьба вывезти.",
    ],
    "Вывоз ТБО (либо уборка после)": [
        "Не вывозят мусор второй день",
        "Мусор на улице не убран",
        "Нужно вывести мусор после праздника",
        "Где обещанный вывоз ТБО?",
        "Контейнеры полные, нужен вывоз ТБО",
        "Мусор из контейнеров не вывозят",
        "Контейнеры с мусором полные, когда будет вывоз?",
        "Мусор давно не вывозят, двор грязный.",
        "Требуется срочная уборка мусора возле дома.",
        "Прошу организовать вывоз мусора.",
        "Мусорный бак переполнен, мусор разлетается по улице."
    ],
    "Отключение электричества": [
        "Отключили электричество на улице",
        "Нет света уже третий день",
        "Электричество отключено в нашем районе",
        "Когда вернут свет?",
        "Нет электричества в доме",
        "Пропал свет в квартире",
        "Света нет уже несколько часов.",
        "Когда восстановят подачу электроэнергии?",
        "У нас аварийное отключение электричества.",
        "В нашем доме уже сутки нет света.",
        "Когда будет включено электричество?"
    ],
    "Консультация по компетенции": [
        "Нужна консультация по вопросам благоустройства",
        "Можно получить консультацию по ремонту?",
        "Консультация по вопросам города нужна",
        "Как получить консультацию по благоустройству?",
        "Требуется консультация по строительным вопросам",
        "Консультация по текущим вопросам благоустройства",
        "Как обратиться за консультацией по вопросам ЖКХ?",
        "Мне нужна помощь в решении жилищных вопросов.",
        "Куда обратиться по поводу благоустройства?",
        "Нужна консультация по работе ЖКХ.",
        "Как можно проконсультироваться по вопросу уборки?"
    ],
    "Открытый люк на дороге": [
        "Открытый люк на дороге",
        "Люк без крышки на улице Сейфуллина",
        "На дороге открыт люк, опасно",
        "Люк на дороге не закрыт, это опасно",
        "Открытый люк на тротуаре",
        "Люк не закрыт на улице Абая",
        "На улице Водозаборная открыт люк.",
        "На тротуаре по улице Сейфуллина открыт люк.",
        "Не закрыт люк у дома №35.",
        "Люк на дороге открыт, это опасно.",
        "Прошу закрыть люк на проезжей части."
    ],
    "Освещение не работает": [
        "Не работает освещение в парке",
        "Лампы на улице перегорели",
        "Освещение не работает, темно",
        "Не горят уличные фонари",
        "Нет света на детской площадке",
        "Освещение на улице отсутствует",
        "У нас во дворе не работает фонарь.",
        "На улице нет освещения, темно и страшно.",
        "Фонари не горят на главной улице.",
        "Лампы перегорели, нужно починить освещение.",
        "Когда починят освещение на детской площадке?"
    ],
    "Уборка дворов (сан. очистка)": [
        "Дворы не убираются, очень грязно",
        "Уборка дворов не проведена",
        "Дворы засыпаны мусором, нужна уборка",
        "Грязь и мусор во дворах, нужна уборка",
        "Дворы не убраны, мусорные баки переполнены",
        "Во дворе не убирались неделю",
        "Во дворе давно не убирались, везде грязь.",
        "Нужна уборка во дворах, всё засыпано мусором.",
        "Во дворах не убрано, много мусора.",
        "Во дворе лежит мусор, нужна уборка.",
        "У нас во дворе не убрано, когда будет уборка?"
    ],
    "Валка сухих/аварийных деревьев": [
        "Во дворе нужно спилить сухие деревья",
        "Деревья аварийные, необходимо удалить",
        "Опасные деревья нужно срубить",
        "Сухие деревья представляют опасность, нужно срубить",
        "Нужно удалить аварийные деревья",
        "Во дворе валяются упавшие деревья, их нужно убрать",
        "Сухие деревья во дворе нужно убрать.",
        "Опасные деревья в парке, могут упасть.",
        "Необходимо срубить сухие деревья.",
        "Прошу срубить аварийные деревья на улице.",
        "Сухие деревья представляют опасность, их нужно удалить."
    ]
}

# Добавление категорий и шаблонных сообщений в базу данных
for category_name, message_list in messages.items():
    # Создаем или получаем существующую категорию
    category, created = Category.objects.get_or_create(name=category_name)

    # Добавляем сообщения для этой категории
    for message in message_list:
        MessageTemplate.objects.create(category=category, message=message)

print("Категории и сообщения успешно добавлены в базу данных.")
